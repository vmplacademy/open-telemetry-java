
name: smart-city-monitoring
services:

  # Prometheus
  prometheus:
    image: prom/prometheus:v3.0.1
    container_name: smart-city-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    networks:
      - smart-city-monitoring

  # Grafana Loki
  loki:
    image: grafana/loki:3.3.2
    container_name: smart-city-loki
    restart: unless-stopped
    volumes:
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - smart-city-monitoring

  # Grafana Tempo
  tempo:
    image: grafana/tempo:latest
    container_name: smart-city-tempo
    restart: unless-stopped
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml:ro
#      - tempo_data:/tmp/tempo
    ports:
      - "3200:3200"   # tempo
      - "4317:4317"   # otlp grpc
      - "4318:4318"   # otlp http
    networks:
      - smart-city-monitoring

  # Grafana Pyroscope
  pyroscope:
    image: grafana/pyroscope:1.10.0
    container_name: smart-city-pyroscope
    restart: unless-stopped
    ports:
      - "4040:4040"
    networks:
      - smart-city-monitoring

  # Grafana
  grafana:
    image: grafana/grafana:11.4.0
    container_name: smart-city-grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    env_file:
      - ./grafana/config
    networks:
      - smart-city-monitoring
    depends_on:
      - prometheus
      - loki
      - tempo
      - pyroscope

  #  Smart Mobility
  smart-mobility:
    build:
      context: ../smart-mobility
      dockerfile: Dockerfile
    container_name: smart-city-smart-mobility
    image: smart-city/smart-mobility
    restart: unless-stopped
    depends_on:
      - payment
    ports:
      - "8090:8090"
    environment:
      SPRING_PROFILES_ACTIVE: default
    healthcheck:
      test: "exit 0"
    networks:
      - smart-city-monitoring

  #  Payment
  payment:
    build:
      context: ../payment
      dockerfile: Dockerfile
    container_name: smart-city-payment
    image: smart-city/payment
    restart: unless-stopped
    ports:
      - "8091:8091"
    environment:
      SPRING_PROFILES_ACTIVE: default
    healthcheck:
      test: "exit 0"
    networks:
      - smart-city-monitoring

networks:
  smart-city-monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  tempo_data: